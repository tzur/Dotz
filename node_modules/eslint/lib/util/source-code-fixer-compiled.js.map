{"version":3,"sources":["source-code-fixer.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;;;AAMb,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,mBAAmB,CAAC,CAAC;;;;;;;;;;;;;AAalD,SAAS,yBAAyB,CAAC,CAAC,EAAE,CAAC,EAAE;AACrC,QAAI,QAAQ,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;;AAE/B,QAAI,QAAQ,KAAK,CAAC,EAAE;AAChB,eAAO,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;KAC9B,MAAM;AACH,eAAO,QAAQ,CAAC;KACnB;CACJ;;;;;;;;;;AAUD,SAAS,eAAe,GAAG;AACvB,UAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;CACvB;;;;;;;;;AASD,eAAe,CAAC,UAAU,GAAG,UAAS,UAAU,EAAE,QAAQ,EAAE;;AAExD,SAAK,CAAC,gBAAgB,CAAC,CAAC;;AAExB,QAAI,CAAC,UAAU,EAAE;AACb,aAAK,CAAC,uBAAuB,CAAC,CAAC;AAC/B,eAAO;AACH,iBAAK,EAAE,KAAK;AACZ,oBAAQ,EAAE,QAAQ;AAClB,kBAAM,EAAE,EAAE;SACb,CAAC;KACL;;;AAGD,QAAI,iBAAiB,GAAG,EAAE;QACtB,KAAK,GAAG,EAAE;QACV,IAAI,GAAG,UAAU,CAAC,IAAI;QACtB,UAAU,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;;AAEjC,YAAQ,CAAC,OAAO,CAAC,UAAS,OAAO,EAAE;AAC/B,YAAI,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AAC/B,iBAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACvB,MAAM;AACH,6BAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACnC;KACJ,CAAC,CAAC;;AAEH,QAAI,KAAK,CAAC,MAAM,EAAE;AACd,aAAK,CAAC,sBAAsB,CAAC,CAAC;;;AAG9B,aAAK,CAAC,IAAI,CAAC,UAAS,CAAC,EAAE,CAAC,EAAE;AACtB,gBAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;AAClC,uBAAO,CAAC,CAAC;aACZ,MAAM;AACH,uBAAO,CAAC,CAAC,CAAC;aACb;SACJ,CAAC,CAAC;;;AAGH,YAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;;AAE3B,aAAK,CAAC,OAAO,CAAC,UAAS,OAAO,EAAE;AAC5B,gBAAI,GAAG,GAAG,OAAO,CAAC,GAAG,CAAC;;AAEtB,gBAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,UAAU,EAAE;AAC5B,qBAAK,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;AAClE,0BAAU,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;aAC7B,MAAM;AACH,iCAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACnC;SACJ,CAAC,CAAC;;AAEH,eAAO;AACH,iBAAK,EAAE,IAAI;AACX,oBAAQ,EAAE,iBAAiB,CAAC,IAAI,CAAC,yBAAyB,CAAC;AAC3D,kBAAM,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;SACzB,CAAC;KACL,MAAM;AACH,aAAK,CAAC,mBAAmB,CAAC,CAAC;AAC3B,eAAO;AACH,iBAAK,EAAE,KAAK;AACZ,oBAAQ,EAAE,QAAQ;AAClB,kBAAM,EAAE,IAAI;SACf,CAAC;KACL;CACJ,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC","file":"source-code-fixer-compiled.js","sourcesContent":["/**\n * @fileoverview An object that caches and applies source code fixes.\n * @author Nicholas C. Zakas\n * @copyright 2015 Nicholas C. Zakas. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nvar debug = require(\"debug\")(\"eslint:text-fixer\");\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Compares items in a messages array by line and column.\n * @param {Message} a The first message.\n * @param {Message} b The second message.\n * @returns {int} -1 if a comes before b, 1 if a comes after b, 0 if equal.\n * @private\n */\nfunction compareMessagesByLocation(a, b) {\n    var lineDiff = a.line - b.line;\n\n    if (lineDiff === 0) {\n        return a.column - b.column;\n    } else {\n        return lineDiff;\n    }\n}\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * Utility for apply fixes to source code.\n * @constructor\n */\nfunction SourceCodeFixer() {\n    Object.freeze(this);\n}\n\n/**\n * Applies the fixes specified by the messages to the given text. Tries to be\n * smart about the fixes and won't apply fixes over the same area in the text.\n * @param {SourceCode} sourceCode The source code to apply the changes to.\n * @param {Message[]} messages The array of messages reported by ESLint.\n * @returns {Object} An object containing the fixed text and any unfixed messages.\n */\nSourceCodeFixer.applyFixes = function(sourceCode, messages) {\n\n    debug(\"Applying fixes\");\n\n    if (!sourceCode) {\n        debug(\"No source code to fix\");\n        return {\n            fixed: false,\n            messages: messages,\n            output: \"\"\n        };\n    }\n\n    // clone the array\n    var remainingMessages = [],\n        fixes = [],\n        text = sourceCode.text,\n        lastFixPos = text.length + 1;\n\n    messages.forEach(function(problem) {\n        if (problem.hasOwnProperty(\"fix\")) {\n            fixes.push(problem);\n        } else {\n            remainingMessages.push(problem);\n        }\n    });\n\n    if (fixes.length) {\n        debug(\"Found fixes to apply\");\n\n        // sort in reverse order of occurrence\n        fixes.sort(function(a, b) {\n            if (a.fix.range[1] <= b.fix.range[0]) {\n                return 1;\n            } else {\n                return -1;\n            }\n        });\n\n        // split into array of characters for easier manipulation\n        var chars = text.split(\"\");\n\n        fixes.forEach(function(problem) {\n            var fix = problem.fix;\n\n            if (fix.range[1] <= lastFixPos) {\n                chars.splice(fix.range[0], fix.range[1] - fix.range[0], fix.text);\n                lastFixPos = fix.range[0];\n            } else {\n                remainingMessages.push(problem);\n            }\n        });\n\n        return {\n            fixed: true,\n            messages: remainingMessages.sort(compareMessagesByLocation),\n            output: chars.join(\"\")\n        };\n    } else {\n        debug(\"No fixes to apply\");\n        return {\n            fixed: false,\n            messages: messages,\n            output: text\n        };\n    }\n};\n\nmodule.exports = SourceCodeFixer;\n"]}