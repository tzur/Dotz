{"version":3,"sources":["no-return-assign.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;;;;AAWb,SAAS,YAAY,CAAC,IAAI,EAAE;AACxB,WAAO,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,sBAAsB,CAAC;CACvD;;;;;;;;AAQD,SAAS,kBAAkB,CAAC,IAAI,EAAE,OAAO,EAAE;AACvC,QAAI,SAAS,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC7C,QAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;;AAE5C,WAAO,SAAS,CAAC,KAAK,KAAK,GAAG,IAAI,SAAS,CAAC,KAAK,KAAK,GAAG,CAAC;CAC7D;;;;;;AAMD,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;AAC/B,QAAI,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,eAAe,CAAA,KAAM,eAAe,CAAC;;AAEzE,WAAO;AACH,yBAAiB,EAAE,yBAAS,IAAI,EAAE;AAC9B,gBAAI,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,MAAM,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA,AAAC,EAAE;AACxF,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,iDAAiD,CAAC,CAAC;aAC3E;SACJ;KACJ,CAAC;CACL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CACpB;AACI,UAAM,EAAE,CAAC,eAAe,EAAE,QAAQ,CAAC;CACtC,CACJ,CAAC","file":"no-return-assign-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag when return statement contains assignment\n * @author Ilya Volodin\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\n/**\n * Checks whether or not a node is an `AssignmentExpression`.\n * @param {Node|null} node - A node to check.\n * @returns {boolean} Whether or not the node is an `AssignmentExpression`.\n */\nfunction isAssignment(node) {\n    return node && node.type === \"AssignmentExpression\";\n}\n\n/**\n * Checks whether or not a node is enclosed in parentheses.\n * @param {Node|null} node - A node to check.\n * @param {RuleContext} context - The current context.\n * @returns {boolean} Whether or not the node is enclosed in parentheses.\n */\nfunction isEnclosedInParens(node, context) {\n    var prevToken = context.getTokenBefore(node);\n    var nextToken = context.getTokenAfter(node);\n\n    return prevToken.value === \"(\" && nextToken.value === \")\";\n}\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n    var always = (context.options[0] || \"except-parens\") !== \"except-parens\";\n\n    return {\n        \"ReturnStatement\": function(node) {\n            if (isAssignment(node.argument) && (always || !isEnclosedInParens(node.argument, context))) {\n                context.report(node, \"Return statement should not contain assignment.\");\n            }\n        }\n    };\n};\n\nmodule.exports.schema = [\n    {\n        \"enum\": [\"except-parens\", \"always\"]\n    }\n];\n"]}