{"version":3,"sources":["no-empty.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;;AAEH,wBAAgB,EAAE,wBAAS,IAAI,EAAE;AAC7B,gBAAI,MAAM,GAAG,IAAI,CAAC,MAAM;gBACpB,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC;;;AAG7B,gBAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;AACxB,uBAAO;aACV;;;AAGD,gBAAI,UAAU,KAAK,qBAAqB,IAAI,UAAU,KAAK,oBAAoB,IAAI,UAAU,KAAK,yBAAyB,EAAE;AACzH,uBAAO;aACV;;;AAGD,gBAAI,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/C,uBAAO;aACV;;AAED,mBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,wBAAwB,CAAC,CAAC;SAClD;;AAED,yBAAiB,EAAE,yBAAS,IAAI,EAAE;;AAE9B,gBAAI,OAAO,IAAI,CAAC,KAAK,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC9D,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,yBAAyB,CAAC,CAAC;aACnD;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-empty-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of an empty block statement\n * @author Nicholas C. Zakas\n * @copyright Nicholas C. Zakas. All rights reserved.\n * @copyright 2015 Dieter Oberkofler. All rights reserved.\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n\n        \"BlockStatement\": function(node) {\n            var parent = node.parent,\n                parentType = parent.type;\n\n            // if the body is not empty, we can just return immediately\n            if (node.body.length !== 0) {\n                return;\n            }\n\n            // a function is generally allowed to be empty\n            if (parentType === \"FunctionDeclaration\" || parentType === \"FunctionExpression\" || parentType === \"ArrowFunctionExpression\") {\n                return;\n            }\n\n            // any other block is only allowed to be empty, if it contains a comment\n            if (context.getComments(node).trailing.length > 0) {\n                return;\n            }\n\n            context.report(node, \"Empty block statement.\");\n        },\n\n        \"SwitchStatement\": function(node) {\n\n            if (typeof node.cases === \"undefined\" || node.cases.length === 0) {\n                context.report(node, \"Empty switch statement.\");\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}