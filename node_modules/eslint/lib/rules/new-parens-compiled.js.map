{"version":3,"sources":["new-parens.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;;AAEH,uBAAe,EAAE,uBAAS,IAAI,EAAE;AAC5B,gBAAI,MAAM,GAAG,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACrC,gBAAI,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,UAAS,KAAK,EAAE;AAChD,uBAAO,KAAK,CAAC,KAAK,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC;aACrD,CAAC,CAAC;AACH,gBAAI,eAAe,CAAC,MAAM,GAAG,CAAC,EAAE;AAC5B,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,qCAAqC,CAAC,CAAC;aAC/D;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"new-parens-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag when using constructor without parentheses\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n\n        \"NewExpression\": function(node) {\n            var tokens = context.getTokens(node);\n            var prenticesTokens = tokens.filter(function(token) {\n                return token.value === \"(\" || token.value === \")\";\n            });\n            if (prenticesTokens.length < 2) {\n                context.report(node, \"Missing '()' invoking a constructor\");\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}