{"version":3,"sources":["no-shadow.js"],"names":[],"mappings":"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","file":"no-shadow-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag on declaring variables already declared in the outer scope\n * @author Ilya Volodin\n * @copyright 2013 Ilya Volodin. All rights reserved.\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    var options = {\n        builtinGlobals: Boolean(context.options[0] && context.options[0].builtinGlobals),\n        hoist: (context.options[0] && context.options[0].hoist) || \"functions\"\n    };\n\n    /**\n     * Checks if a variable of the class name in the class scope of ClassDeclaration.\n     *\n     * ClassDeclaration creates two variables of its name into its outer scope and its class scope.\n     * So we should ignore the variable in the class scope.\n     *\n     * @param {Object} variable The variable to check.\n     * @returns {boolean} Whether or not the variable of the class name in the class scope of ClassDeclaration.\n     */\n    function isDuplicatedClassNameVariable(variable) {\n        var block = variable.scope.block;\n        return block.type === \"ClassDeclaration\" && block.id === variable.identifiers[0];\n    }\n\n    /**\n     * Checks if a variable is inside the initializer of scopeVar.\n     *\n     * To avoid reporting at declarations such as `var a = function a() {};`.\n     * But it should report `var a = function(a) {};` or `var a = function() { function a() {} };`.\n     *\n     * @param {Object} variable The variable to check.\n     * @param {Object} scopeVar The scope variable to look for.\n     * @returns {boolean} Whether or not the variable is inside initializer of scopeVar.\n     */\n    function isOnInitializer(variable, scopeVar) {\n        var outerScope = scopeVar.scope;\n        var outerDef = scopeVar.defs[0];\n        var outer = outerDef && outerDef.parent && outerDef.parent.range;\n        var innerScope = variable.scope;\n        var innerDef = variable.defs[0];\n        var inner = innerDef && innerDef.name.range;\n\n        return (\n            outer &&\n            inner &&\n            outer[0] < inner[0] &&\n            inner[1] < outer[1] &&\n            ((innerDef.type === \"FunctionName\" && innerDef.node.type === \"FunctionExpression\") || innerDef.node.type === \"ClassExpression\") &&\n            outerScope === innerScope.upper\n        );\n    }\n\n    /**\n     * Get a range of a variable's identifier node.\n     * @param {Object} variable The variable to get.\n     * @returns {Array|undefined} The range of the variable's identifier node.\n     */\n    function getNameRange(variable) {\n        var def = variable.defs[0];\n        return def && def.name.range;\n    }\n\n    /**\n     * Checks if a variable is in TDZ of scopeVar.\n     * @param {Object} variable The variable to check.\n     * @param {Object} scopeVar The variable of TDZ.\n     * @returns {boolean} Whether or not the variable is in TDZ of scopeVar.\n     */\n    function isInTdz(variable, scopeVar) {\n        var outerDef = scopeVar.defs[0];\n        var inner = getNameRange(variable);\n        var outer = getNameRange(scopeVar);\n        return (\n            inner &&\n            outer &&\n            inner[1] < outer[0] &&\n            // Excepts FunctionDeclaration if is {\"hoist\":\"function\"}.\n            (options.hoist !== \"functions\" || !outerDef || outerDef.node.type !== \"FunctionDeclaration\")\n        );\n    }\n\n    /**\n     * Checks if a variable is contained in the list of given scope variables.\n     * @param {Object} variable The variable to check.\n     * @param {Array} scopeVars The scope variables to look for.\n     * @returns {boolean} Whether or not the variable is contains in the list of scope variables.\n     */\n    function isContainedInScopeVars(variable, scopeVars) {\n        return scopeVars.some(function(scopeVar) {\n            return (\n                (scopeVar.identifiers.length > 0 || (options.builtinGlobals && \"writeable\" in scopeVar)) &&\n                variable.name === scopeVar.name &&\n                !isDuplicatedClassNameVariable(scopeVar) &&\n                !isOnInitializer(variable, scopeVar) &&\n                !(options.hoist !== \"all\" && isInTdz(variable, scopeVar))\n            );\n        });\n    }\n\n    /**\n     * Checks if the given variables are shadowed in the given scope.\n     * @param {Array} variables The variables to look for\n     * @param {Object} scope The scope to be checked.\n     * @returns {Array} Variables which are not declared in the given scope.\n     */\n    function checkShadowsInScope(variables, scope) {\n\n        var passedVars = [];\n\n        variables.forEach(function(variable) {\n            // \"arguments\" is a special case that has no identifiers (#1759)\n            if (variable.identifiers.length > 0 && isContainedInScopeVars(variable, scope.variables)) {\n                context.report(\n                    variable.identifiers[0],\n                    \"{{name}} is already declared in the upper scope.\",\n                    {name: variable.name});\n            } else {\n                passedVars.push(variable);\n            }\n        });\n\n        return passedVars;\n    }\n\n    /**\n     * Checks the current context for shadowed variables.\n     * @param {Scope} scope - Fixme\n     * @returns {void}\n     */\n    function checkForShadows(scope) {\n        var variables = scope.variables.filter(function(variable) {\n            return (\n                // Skip \"arguments\".\n                variable.identifiers.length > 0 &&\n                // Skip variables of a class name in the class scope of ClassDeclaration.\n                !isDuplicatedClassNameVariable(variable)\n            );\n        });\n\n        // iterate through the array of variables and find duplicates with the upper scope\n        var upper = scope.upper;\n        while (upper && variables.length) {\n            variables = checkShadowsInScope(variables, upper);\n            upper = upper.upper;\n        }\n    }\n\n    return {\n        \"Program:exit\": function() {\n            var globalScope = context.getScope();\n            var stack = globalScope.childScopes.slice();\n            var scope;\n\n            while (stack.length) {\n                scope = stack.pop();\n                stack.push.apply(stack, scope.childScopes);\n                checkForShadows(scope);\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [\n    {\n        \"type\": \"object\",\n        \"properties\": {\n            \"builtinGlobals\": {\"type\": \"boolean\"},\n            \"hoist\": {\"enum\": [\"all\", \"functions\", \"never\"]}\n        },\n        \"additionalProperties\": false\n    }\n];\n"]}