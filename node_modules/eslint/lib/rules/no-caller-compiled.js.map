{"version":3,"sources":["no-caller.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;;AAEH,0BAAkB,EAAE,0BAAS,IAAI,EAAE;AAC/B,gBAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI;gBAC7B,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC;;AAEtC,gBAAI,UAAU,KAAK,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,YAAY,IAAI,YAAY,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE;AACnG,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,+BAA+B,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;aACrF;SAEJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-caller-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of arguments.callee and arguments.caller.\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n\n        \"MemberExpression\": function(node) {\n            var objectName = node.object.name,\n                propertyName = node.property.name;\n\n            if (objectName === \"arguments\" && !node.computed && propertyName && propertyName.match(/^calle[er]$/)) {\n                context.report(node, \"Avoid arguments.{{property}}.\", { property: propertyName });\n            }\n\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}