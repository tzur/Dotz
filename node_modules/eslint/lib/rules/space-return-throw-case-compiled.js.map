{"version":3,"sources":["space-return-throw-case.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;;;;;;;AAQ/B,aAAS,KAAK,CAAC,IAAI,EAAE;AACjB,YAAI,MAAM,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;YACxC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;;AAE5B,YAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;AAC1C,mBAAO,CAAC,MAAM,CAAC;AACX,oBAAI,EAAE,IAAI;AACV,uBAAO,EAAE,YAAY,GAAG,KAAK,GAAG,oCAAoC;AACpE,mBAAG,EAAE,aAAS,KAAK,EAAE;AACjB,2BAAO,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;iBAC3D;aACJ,CAAC,CAAC;SACN;KACJ;;AAED,WAAO;AACH,yBAAiB,EAAE,yBAAS,IAAI,EAAE;AAC9B,gBAAI,IAAI,CAAC,QAAQ,EAAE;AACf,qBAAK,CAAC,IAAI,CAAC,CAAC;aACf;SACJ;AACD,oBAAY,EAAE,oBAAS,IAAI,EAAE;AACzB,gBAAI,IAAI,CAAC,IAAI,EAAE;AACX,qBAAK,CAAC,IAAI,CAAC,CAAC;aACf;SACJ;AACD,wBAAgB,EAAE,KAAK;KAC1B,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"space-return-throw-case-compiled.js","sourcesContent":["/**\n * @fileoverview Require spaces following return, throw, and case\n * @author Michael Ficarra\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    /**\n     * Check if the node for spaces\n     * @param {ASTNode} node node to evaluate\n     * @returns {void}\n     * @private\n     */\n    function check(node) {\n        var tokens = context.getFirstTokens(node, 2),\n            value = tokens[0].value;\n\n        if (tokens[0].range[1] >= tokens[1].range[0]) {\n            context.report({\n                node: node,\n                message: \"Keyword \\\"\" + value + \"\\\" must be followed by whitespace.\",\n                fix: function(fixer) {\n                    return fixer.insertTextAfterRange(tokens[0].range, \" \");\n                }\n            });\n        }\n    }\n\n    return {\n        \"ReturnStatement\": function(node) {\n            if (node.argument) {\n                check(node);\n            }\n        },\n        \"SwitchCase\": function(node) {\n            if (node.test) {\n                check(node);\n            }\n        },\n        \"ThrowStatement\": check\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}