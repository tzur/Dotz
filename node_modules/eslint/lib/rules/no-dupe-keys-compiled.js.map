{"version":3,"sources":["no-dupe-keys.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;;AAEH,0BAAkB,EAAE,0BAAS,IAAI,EAAE;;;;AAI/B,gBAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEpC,gBAAI,CAAC,UAAU,CAAC,OAAO,CAAC,UAAS,QAAQ,EAAE;;AAEvC,oBAAI,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;AAC9B,2BAAO;iBACV;;AAED,oBAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,IAAI,IAAI,QAAQ,CAAC,GAAG,CAAC,KAAK;oBACjD,GAAG,GAAG,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,OAAO;oBACnC,aAAa,GAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS,AAAC,CAAC;;AAE5E,oBAAI,aAAa,EAAE;AACf,wBAAI,SAAS,CAAC,GAAG,CAAC,EAAE;AAChB,+BAAO,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAE,0BAA0B,EAAE,EAAE,GAAG,EAAE,OAAO,EAAE,CAAC,CAAC;qBAC1F,MAAM;AACH,iCAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;qBACzB;iBACJ;aACJ,CAAC,CAAC;SAEN;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-dupe-keys-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of duplicate keys in an object.\n * @author Ian Christian Myers\n * @copyright 2013 Ian Christian Myers. All rights reserved.\n * @copyright 2013 Nicholas C. Zakas. All rights reserved.\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n\n        \"ObjectExpression\": function(node) {\n\n            // Object that will be a map of properties--safe because we will\n            // prefix all of the keys.\n            var nodeProps = Object.create(null);\n\n            node.properties.forEach(function(property) {\n\n                if (property.type !== \"Property\") {\n                    return;\n                }\n\n                var keyName = property.key.name || property.key.value,\n                    key = property.kind + \"-\" + keyName,\n                    checkProperty = (!property.computed || property.key.type === \"Literal\");\n\n                if (checkProperty) {\n                    if (nodeProps[key]) {\n                        context.report(node, property.loc.start, \"Duplicate key '{{key}}'.\", { key: keyName });\n                    } else {\n                        nodeProps[key] = true;\n                    }\n                }\n            });\n\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}