{"version":3,"sources":["no-sync.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;;AAEH,0BAAkB,EAAE,0BAAS,IAAI,EAAE;AAC/B,gBAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI;gBACjC,SAAS,GAAG,SAAS,CAAC;;AAE1B,gBAAI,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,IAAI,EAAE;AACvC,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,2BAA2B,GAAG,YAAY,GAAG,IAAI,CAAC,CAAC;aAC3E;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-sync-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to check for properties whose identifier ends with the string Sync\n * @author Matt DuVall<http://mattduvall.com/>\n */\n\n/* jshint node:true */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n\n        \"MemberExpression\": function(node) {\n            var propertyName = node.property.name,\n                syncRegex = /.*Sync$/;\n\n            if (syncRegex.exec(propertyName) !== null) {\n                context.report(node, \"Unexpected sync method: '\" + propertyName + \"'.\");\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}