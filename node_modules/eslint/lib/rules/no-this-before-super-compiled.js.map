{"version":3,"sources":["no-this-before-super.js"],"names":[],"mappings":"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","file":"no-this-before-super-compiled.js","sourcesContent":["/**\n * @fileoverview A rule to disallow using `this`/`super` before `super()`.\n * @author Toru Nagashima\n * @copyright 2015 Toru Nagashima. All rights reserved.\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    /**\n     * Searches a class node that a node is belonging to.\n     * @param {Node} node - A node to start searching.\n     * @returns {ClassDeclaration|ClassExpression|null} the found class node, or `null`.\n     */\n    function getClassInAncestor(node) {\n        while (node) {\n            if (node.type === \"ClassDeclaration\" || node.type === \"ClassExpression\") {\n                return node;\n            }\n            node = node.parent;\n        }\n        /* istanbul ignore next */\n        return null;\n    }\n\n    /**\n     * Checks whether or not a node is the null literal.\n     * @param {Node} node - A node to check.\n     * @returns {boolean} whether or not a node is the null literal.\n     */\n    function isNullLiteral(node) {\n        return node && node.type === \"Literal\" && node.value === null;\n    }\n\n    /**\n     * Checks whether or not a node is the callee of a call expression.\n     * @param {Node} node - A node to check.\n     * @returns {boolean} whether or not a node is the callee of a call expression.\n     */\n    function isCallee(node) {\n        return node && node.parent.type === \"CallExpression\" && node.parent.callee === node;\n    }\n\n    /**\n     * Checks whether or not the current traversal context is before `super()`.\n     * @param {object} item - A checking context.\n     * @returns {boolean} whether or not the current traversal context is before `super()`.\n     */\n    function isBeforeSuperCalling(item) {\n        return (\n            item &&\n            item.scope === context.getScope().variableScope.upper.variableScope &&\n            item.superCalled === false\n        );\n    }\n\n    var stack = [];\n\n    return {\n        /**\n         * Start checking.\n         * @param {MethodDefinition} node - A target node.\n         * @returns {void}\n         */\n        \"MethodDefinition\": function(node) {\n            if (node.kind !== \"constructor\") {\n                return;\n            }\n            stack.push({\n                thisOrSuperBeforeSuperCalled: [],\n                superCalled: false,\n                scope: context.getScope().variableScope\n            });\n        },\n\n        /**\n         * Treats the result of checking and reports invalid `this`/`super`.\n         * @param {MethodDefinition} node - A target node.\n         * @returns {void}\n         */\n        \"MethodDefinition:exit\": function(node) {\n            if (node.kind !== \"constructor\") {\n                return;\n            }\n            var result = stack.pop();\n\n            // Skip if it has no extends or `extends null`.\n            var classNode = getClassInAncestor(node);\n            if (!classNode || !classNode.superClass || isNullLiteral(classNode.superClass)) {\n                return;\n            }\n\n            // Reports.\n            result.thisOrSuperBeforeSuperCalled.forEach(function(thisOrSuper) {\n                var type = (thisOrSuper.type === \"Super\" ? \"super\" : \"this\");\n                context.report(thisOrSuper, \"\\\"{{type}}\\\" is not allowed before super()\", {type: type});\n            });\n        },\n\n        /**\n         * Marks the node if is before `super()`.\n         * @param {ThisExpression} node - A target node.\n         * @returns {void}\n         */\n        \"ThisExpression\": function(node) {\n            var item = stack[stack.length - 1];\n            if (isBeforeSuperCalling(item)) {\n                item.thisOrSuperBeforeSuperCalled.push(node);\n            }\n        },\n\n        /**\n         * Marks the node if is before `super()`. (exclude `super()` itself)\n         * @param {Super} node - A target node.\n         * @returns {void}\n         */\n        \"Super\": function(node) {\n            var item = stack[stack.length - 1];\n            if (isBeforeSuperCalling(item) && isCallee(node) === false) {\n                item.thisOrSuperBeforeSuperCalled.push(node);\n            }\n        },\n\n        /**\n         * Marks `super()` called.\n         * To catch `super(this.a);`, marks on `CallExpression:exit`.\n         * @param {CallExpression} node - A target node.\n         * @returns {void}\n         */\n        \"CallExpression:exit\": function(node) {\n            var item = stack[stack.length - 1];\n            if (isBeforeSuperCalling(item) && node.callee.type === \"Super\") {\n                item.superCalled = true;\n            }\n        }\n    };\n};\n\nmodule.exports.schema = [];\n"]}