{"version":3,"sources":["dot-location.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;AAEb,IAAI,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;;;;;AAMvC,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,QAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;;;AAE3B,YAAQ,GAAG,MAAM,KAAK,QAAQ,IAAI,CAAC,MAAM,CAAC;;;;;;;;;AAS9C,aAAS,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AACvC,YAAI,GAAG,GAAG,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;;AAEvC,YAAI,GAAG,CAAC,IAAI,KAAK,YAAY,IAAI,GAAG,CAAC,KAAK,KAAK,GAAG,EAAE;AAChD,gBAAI,QAAQ,EAAE;AACV,oBAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE;AACvC,2BAAO,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,4CAA4C,CAAC,CAAC;iBACrF;aACJ,MAAM,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;AAC/C,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,8CAA8C,CAAC,CAAC;aACvF;SACJ;KACJ;;;;;;;AAOD,aAAS,SAAS,CAAC,IAAI,EAAE;AACrB,wBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;KACtD;;AAED,WAAO;AACH,0BAAkB,EAAE,SAAS;KAChC,CAAC;CACL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CACpB;AACI,UAAM,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC;CACjC,CACJ,CAAC","file":"dot-location-compiled.js","sourcesContent":["/**\n * @fileoverview Validates newlines before and after dots\n * @author Greg Cochard\n * @copyright 2015 Greg Cochard\n */\n\n\"use strict\";\n\nvar astUtils = require(\"../ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    var config = context.options[0],\n        // default to onObject if no preference is passed\n        onObject = config === \"object\" || !config;\n\n    /**\n     * Reports if the dot between object and property is on the correct loccation.\n     * @param {ASTNode} obj The object owning the property.\n     * @param {ASTNode} prop The property of the object.\n     * @param {ASTNode} node The corresponding node of the token.\n     * @returns {void}\n     */\n    function checkDotLocation(obj, prop, node) {\n        var dot = context.getTokenBefore(prop);\n\n        if (dot.type === \"Punctuator\" && dot.value === \".\") {\n            if (onObject) {\n                if (!astUtils.isTokenOnSameLine(obj, dot)) {\n                    context.report(node, dot.loc.start, \"Expected dot to be on same line as object.\");\n                }\n            } else if (!astUtils.isTokenOnSameLine(dot, prop)) {\n                context.report(node, dot.loc.start, \"Expected dot to be on same line as property.\");\n            }\n        }\n    }\n\n    /**\n     * Checks the spacing of the dot within a member expression.\n     * @param {ASTNode} node The node to check.\n     * @returns {void}\n     */\n    function checkNode(node) {\n        checkDotLocation(node.object, node.property, node);\n    }\n\n    return {\n        \"MemberExpression\": checkNode\n    };\n};\n\nmodule.exports.schema = [\n    {\n        \"enum\": [\"object\", \"property\"]\n    }\n];\n"]}