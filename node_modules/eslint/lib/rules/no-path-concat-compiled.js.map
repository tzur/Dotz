{"version":3,"sources":["no-path-concat.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,QAAI,OAAO,GAAG,sBAAsB,CAAC;;;;;;AAMrC,WAAO;;AAEH,0BAAkB,EAAE,0BAAS,IAAI,EAAE;;AAE/B,gBAAI,IAAI,GAAG,IAAI,CAAC,IAAI;gBAChB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;;AAEvB,gBAAI,IAAI,CAAC,QAAQ,KAAK,GAAG,KAChB,AAAC,IAAI,CAAC,IAAI,KAAK,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IACtD,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,AAAC,EAChE;;AAEE,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,iEAAiE,CAAC,CAAC;aAC3F;SACJ;;KAEJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-path-concat-compiled.js","sourcesContent":["/**\n * @fileoverview Disallow string concatenation when using __dirname and __filename\n * @author Nicholas C. Zakas\n */\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    var MATCHER = /^__(?:dir|file)name$/;\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n\n        \"BinaryExpression\": function(node) {\n\n            var left = node.left,\n                right = node.right;\n\n            if (node.operator === \"+\" &&\n                    ((left.type === \"Identifier\" && MATCHER.test(left.name)) ||\n                    (right.type === \"Identifier\" && MATCHER.test(right.name)))\n            ) {\n\n                context.report(node, \"Use path.join() or path.resolve() instead of + to create paths.\");\n            }\n        }\n\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}