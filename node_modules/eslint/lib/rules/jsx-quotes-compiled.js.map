{"version":3,"sources":["jsx-quotes.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;;;AAMb,IAAI,QAAQ,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;;;;;AAMvC,IAAI,cAAc,GAAG;AACjB,mBAAe,EAAE;AACb,aAAK,EAAE,IAAI;AACX,mBAAW,EAAE,aAAa;KAC7B;AACD,mBAAe,EAAE;AACb,aAAK,EAAE,GAAG;AACV,mBAAW,EAAE,aAAa;KAC7B;CACJ,CAAC;;;;;;AAMF,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;AAC/B,QAAI,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,eAAe;QACnD,OAAO,GAAG,cAAc,CAAC,WAAW,CAAC,CAAC;;;;;;;;AAQ1C,aAAS,kBAAkB,CAAC,IAAI,EAAE;AAC9B,eAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;KACvG;;AAED,WAAO;AACH,sBAAc,EAAE,sBAAS,IAAI,EAAE;AAC3B,gBAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC;;AAEhC,gBAAI,cAAc,IAAI,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC,IAAI,CAAC,kBAAkB,CAAC,cAAc,CAAC,EAAE;AACnG,uBAAO,CAAC,MAAM,CAAC,cAAc,EAAE,sCAAsC,EAAE,OAAO,CAAC,CAAC;aACnF;SACJ;KACJ,CAAC;CACL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CACpB;AACI,UAAM,EAAE,CAAE,eAAe,EAAE,eAAe,CAAE;CAC/C,CACJ,CAAC","file":"jsx-quotes-compiled.js","sourcesContent":["/**\n * @fileoverview A rule to ensure consistent quotes used in jsx syntax.\n * @author Mathias Schreck <https://github.com/lo1tuma>\n * @copyright 2015 Mathias Schreck\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nvar astUtils = require(\"../ast-utils\");\n\n//------------------------------------------------------------------------------\n// Constants\n//------------------------------------------------------------------------------\n\nvar QUOTE_SETTINGS = {\n    \"prefer-double\": {\n        quote: \"\\\"\",\n        description: \"singlequote\"\n    },\n    \"prefer-single\": {\n        quote: \"'\",\n        description: \"doublequote\"\n    }\n};\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n    var quoteOption = context.options[0] || \"prefer-double\",\n        setting = QUOTE_SETTINGS[quoteOption];\n\n    /**\n     * Checks if the given string literal node uses the expected quotes\n     * @param {ASTNode} node - A string literal node.\n     * @returns {boolean} Whether or not the string literal used the expected quotes.\n     * @public\n     */\n    function usesExpectedQuotes(node) {\n        return node.value.indexOf(setting.quote) !== -1 || astUtils.isSurroundedBy(node.raw, setting.quote);\n    }\n\n    return {\n        \"JSXAttribute\": function(node) {\n            var attributeValue = node.value;\n\n            if (attributeValue && astUtils.isStringLiteral(attributeValue) && !usesExpectedQuotes(attributeValue)) {\n                context.report(attributeValue, \"Unexpected usage of {{description}}.\", setting);\n            }\n        }\n    };\n};\n\nmodule.exports.schema = [\n    {\n        \"enum\": [ \"prefer-single\", \"prefer-double\" ]\n    }\n];\n"]}