{"version":3,"sources":["no-new-func.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;;;;;;;;;;;AAY/B,aAAS,cAAc,CAAC,IAAI,EAAE;AAC1B,YAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACjC,mBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,mCAAmC,CAAC,CAAC;SAC7D;KACJ;;AAED,WAAO;AACH,uBAAe,EAAE,cAAc;AAC/B,wBAAgB,EAAE,cAAc;KACnC,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-new-func-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag when using new Function\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    //--------------------------------------------------------------------------\n    // Helpers\n    //--------------------------------------------------------------------------\n\n    /**\n     * Checks if the callee if the Function constructor, and if so, reports an issue.\n     * @param {ASTNode} node The node to check and report on\n     * @returns {void}\n     * @private\n     */\n    function validateCallee(node) {\n        if (node.callee.name === \"Function\") {\n            context.report(node, \"The Function constructor is eval.\");\n        }\n    }\n\n    return {\n        \"NewExpression\": validateCallee,\n        \"CallExpression\": validateCallee\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}