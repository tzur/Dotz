{"version":3,"sources":["object-curly-spacing.js"],"names":[],"mappings":"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","file":"object-curly-spacing-compiled.js","sourcesContent":["/**\n * @fileoverview Disallows or enforces spaces inside of object literals.\n * @author Jamund Ferguson\n * @copyright 2014 Brandyn Bennett. All rights reserved.\n * @copyright 2014 Michael Ficarra. No rights reserved.\n * @copyright 2014 Vignesh Anand. All rights reserved.\n * @copyright 2015 Jamund Ferguson. All rights reserved.\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\"use strict\";\n\nvar astUtils = require(\"../ast-utils\");\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n    var spaced = context.options[0] === \"always\",\n        sourceCode = context.getSourceCode();\n\n    /**\n     * Determines whether an option is set, relative to the spacing option.\n     * If spaced is \"always\", then check whether option is set to false.\n     * If spaced is \"never\", then check whether option is set to true.\n     * @param {Object} option - The option to exclude.\n     * @returns {boolean} Whether or not the property is excluded.\n     */\n    function isOptionSet(option) {\n        return context.options[1] ? context.options[1][option] === !spaced : false;\n    }\n\n    var options = {\n        spaced: spaced,\n        arraysInObjectsException: isOptionSet(\"arraysInObjects\"),\n        objectsInObjectsException: isOptionSet(\"objectsInObjects\")\n    };\n\n    //--------------------------------------------------------------------------\n    // Helpers\n    //--------------------------------------------------------------------------\n\n    /**\n    * Reports that there shouldn't be a space after the first token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportNoBeginningSpace(node, token) {\n        context.report({\n            node: node,\n            loc: token.loc.end,\n            message: \"There should be no space after '\" + token.value + \"'\",\n            fix: function(fixer) {\n                var nextToken = context.getSourceCode().getTokenAfter(token);\n                return fixer.removeRange([token.range[1], nextToken.range[0]]);\n            }\n        });\n    }\n\n    /**\n    * Reports that there shouldn't be a space before the last token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportNoEndingSpace(node, token) {\n        context.report({\n            node: node,\n            loc: token.loc.start,\n            message: \"There should be no space before '\" + token.value + \"'\",\n            fix: function(fixer) {\n                var previousToken = context.getSourceCode().getTokenBefore(token);\n                return fixer.removeRange([previousToken.range[1], token.range[0]]);\n            }\n        });\n    }\n\n    /**\n    * Reports that there should be a space after the first token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportRequiredBeginningSpace(node, token) {\n        context.report({\n            node: node,\n            loc: token.loc.end,\n            message: \"A space is required after '\" + token.value + \"'\",\n            fix: function(fixer) {\n                return fixer.insertTextAfter(token, \" \");\n            }\n        });\n    }\n\n    /**\n    * Reports that there should be a space before the last token\n    * @param {ASTNode} node - The node to report in the event of an error.\n    * @param {Token} token - The token to use for the report.\n    * @returns {void}\n    */\n    function reportRequiredEndingSpace(node, token) {\n        context.report({\n            node: node,\n            loc: token.loc.start,\n            message: \"A space is required before '\" + token.value + \"'\",\n            fix: function(fixer) {\n                return fixer.insertTextBefore(token, \" \");\n            }\n        });\n    }\n\n    /**\n     * Determines if spacing in curly braces is valid.\n     * @param {ASTNode} node The AST node to check.\n     * @param {Token} first The first token to check (should be the opening brace)\n     * @param {Token} second The second token to check (should be first after the opening brace)\n     * @param {Token} penultimate The penultimate token to check (should be last before closing brace)\n     * @param {Token} last The last token to check (should be closing brace)\n     * @returns {void}\n     */\n    function validateBraceSpacing(node, first, second, penultimate, last) {\n        var closingCurlyBraceMustBeSpaced =\n            options.arraysInObjectsException && penultimate.value === \"]\" ||\n            options.objectsInObjectsException && penultimate.value === \"}\"\n                ? !options.spaced : options.spaced,\n            firstSpaced, lastSpaced;\n\n        if (astUtils.isTokenOnSameLine(first, second)) {\n            firstSpaced = sourceCode.isSpaceBetweenTokens(first, second);\n            if (options.spaced && !firstSpaced) {\n                reportRequiredBeginningSpace(node, first);\n            }\n            if (!options.spaced && firstSpaced) {\n                reportNoBeginningSpace(node, first);\n            }\n        }\n\n        if (astUtils.isTokenOnSameLine(penultimate, last)) {\n            lastSpaced = sourceCode.isSpaceBetweenTokens(penultimate, last);\n            if (closingCurlyBraceMustBeSpaced && !lastSpaced) {\n                reportRequiredEndingSpace(node, last);\n            }\n            if (!closingCurlyBraceMustBeSpaced && lastSpaced) {\n                reportNoEndingSpace(node, last);\n            }\n        }\n    }\n\n    /**\n     * Reports a given object node if spacing in curly braces is invalid.\n     * @param {ASTNode} node - An ObjectExpression or ObjectPattern node to check.\n     * @returns {void}\n     */\n    function checkForObject(node) {\n        if (node.properties.length === 0) {\n            return;\n        }\n\n        var first = sourceCode.getFirstToken(node),\n            last = sourceCode.getLastToken(node),\n            second = sourceCode.getTokenAfter(first),\n            penultimate = sourceCode.getTokenBefore(last);\n\n        validateBraceSpacing(node, first, second, penultimate, last);\n    }\n\n    /**\n     * Reports a given import node if spacing in curly braces is invalid.\n     * @param {ASTNode} node - An ImportDeclaration node to check.\n     * @returns {void}\n     */\n    function checkForImport(node) {\n        if (node.specifiers.length === 0) {\n            return;\n        }\n\n        var firstSpecifier = node.specifiers[0],\n            lastSpecifier = node.specifiers[node.specifiers.length - 1];\n\n        if (lastSpecifier.type !== \"ImportSpecifier\") {\n            return;\n        }\n        if (firstSpecifier.type !== \"ImportSpecifier\") {\n            firstSpecifier = node.specifiers[1];\n        }\n\n        var first = sourceCode.getTokenBefore(firstSpecifier),\n            last = sourceCode.getTokenAfter(lastSpecifier);\n\n        // to support a trailing comma.\n        if (last.value === \",\") {\n            last = sourceCode.getTokenAfter(last);\n        }\n\n        var second = sourceCode.getTokenAfter(first),\n            penultimate = sourceCode.getTokenBefore(last);\n\n        validateBraceSpacing(node, first, second, penultimate, last);\n    }\n\n    /**\n     * Reports a given export node if spacing in curly braces is invalid.\n     * @param {ASTNode} node - An ExportNamedDeclaration node to check.\n     * @returns {void}\n     */\n    function checkForExport(node) {\n        if (node.specifiers.length === 0) {\n            return;\n        }\n\n        var firstSpecifier = node.specifiers[0],\n            lastSpecifier = node.specifiers[node.specifiers.length - 1],\n            first = sourceCode.getTokenBefore(firstSpecifier),\n            last = sourceCode.getTokenAfter(lastSpecifier);\n\n        // to support a trailing comma.\n        if (last.value === \",\") {\n            last = sourceCode.getTokenAfter(last);\n        }\n\n        var second = sourceCode.getTokenAfter(first),\n            penultimate = sourceCode.getTokenBefore(last);\n\n        validateBraceSpacing(node, first, second, penultimate, last);\n    }\n\n    //--------------------------------------------------------------------------\n    // Public\n    //--------------------------------------------------------------------------\n\n    return {\n        // var {x} = y;\n        ObjectPattern: checkForObject,\n\n        // var y = {x: 'y'}\n        ObjectExpression: checkForObject,\n\n        // import {y} from 'x';\n        ImportDeclaration: checkForImport,\n\n        // export {name} from 'yo';\n        ExportNamedDeclaration: checkForExport\n    };\n\n};\n\nmodule.exports.schema = [\n    {\n        \"enum\": [\"always\", \"never\"]\n    },\n    {\n        \"type\": \"object\",\n        \"properties\": {\n            \"arraysInObjects\": {\n                \"type\": \"boolean\"\n            },\n            \"objectsInObjects\": {\n                \"type\": \"boolean\"\n            }\n        },\n        \"additionalProperties\": false\n    }\n];\n"]}