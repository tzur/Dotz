{"version":3,"sources":["no-script-url.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;;AAEH,iBAAS,EAAE,iBAAS,IAAI,EAAE;;AAEtB,gBAAI,KAAK,CAAC;;AAEV,gBAAI,IAAI,CAAC,KAAK,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;AAC9C,qBAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;;AAEjC,oBAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;AACpC,2BAAO,CAAC,MAAM,CAAC,IAAI,EAAE,+BAA+B,CAAC,CAAC;iBACzD;aACJ;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-script-url-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag when using javascript: urls\n * @author Ilya Volodin\n */\n/* jshint scripturl: true */\n/* eslint no-script-url: 0 */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n\n        \"Literal\": function(node) {\n\n            var value;\n\n            if (node.value && typeof node.value === \"string\") {\n                value = node.value.toLowerCase();\n\n                if (value.indexOf(\"javascript:\") === 0) {\n                    context.report(node, \"Script URL is a form of eval.\");\n                }\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}