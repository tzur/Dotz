{"version":3,"sources":["no-eval.js"],"names":[],"mappings":";;;;;;;AAOA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;AACH,wBAAgB,EAAE,wBAAS,IAAI,EAAE;AAC7B,gBAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,MAAM,EAAE;AAC7B,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,sBAAsB,CAAC,CAAC;aAChD;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-eval-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of eval() statement\n * @author Nicholas C. Zakas\n * @copyright 2015 Mathias Schreck. All rights reserved.\n * @copyright 2013 Nicholas C. Zakas. All rights reserved.\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n        \"CallExpression\": function(node) {\n            if (node.callee.name === \"eval\") {\n                context.report(node, \"eval can be harmful.\");\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}