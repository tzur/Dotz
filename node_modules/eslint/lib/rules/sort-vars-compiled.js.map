{"version":3,"sources":["sort-vars.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,QAAI,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE;QACxC,UAAU,GAAG,aAAa,CAAC,UAAU,IAAI,KAAK,CAAC;;AAEnD,WAAO;AACH,6BAAqB,EAAE,6BAAS,IAAI,EAAE;AAClC,gBAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAS,IAAI,EAAE,IAAI,EAAE;AAC1C,oBAAI,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,eAAe,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,cAAc,EAAE;AACrE,2BAAO,IAAI,CAAC;iBACf;;AAED,oBAAI,gBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI;oBAC/B,kBAAkB,GAAG,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC;;AAEtC,oBAAI,UAAU,EAAE;AACZ,oCAAgB,GAAG,gBAAgB,CAAC,WAAW,EAAE,CAAC;AAClD,sCAAkB,GAAG,kBAAkB,CAAC,WAAW,EAAE,CAAC;iBACzD;;AAED,oBAAI,kBAAkB,GAAG,gBAAgB,EAAE;AACvC,2BAAO,CAAC,MAAM,CAAC,IAAI,EAAE,6EAA6E,CAAC,CAAC;AACpG,2BAAO,IAAI,CAAC;iBACf,MAAM;AACH,2BAAO,IAAI,CAAC;iBACf;aACJ,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5B;KACJ,CAAC;CACL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CACpB;AACI,UAAM,EAAE,QAAQ;AAChB,gBAAY,EAAE;AACV,oBAAY,EAAE;AACV,kBAAM,EAAE,SAAS;SACpB;KACJ;AACD,0BAAsB,EAAE,KAAK;CAChC,CACJ,CAAC","file":"sort-vars-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to require sorting of variables within a single Variable Declaration block\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    var configuration = context.options[0] || {},\n        ignoreCase = configuration.ignoreCase || false;\n\n    return {\n        \"VariableDeclaration\": function(node) {\n            node.declarations.reduce(function(memo, decl) {\n                if (decl.id.type === \"ObjectPattern\" || decl.id.type === \"ArrayPattern\") {\n                    return memo;\n                }\n\n                var lastVariableName = memo.id.name,\n                    currenVariableName = decl.id.name;\n\n                if (ignoreCase) {\n                    lastVariableName = lastVariableName.toLowerCase();\n                    currenVariableName = currenVariableName.toLowerCase();\n                }\n\n                if (currenVariableName < lastVariableName) {\n                    context.report(decl, \"Variables within the same declaration block should be sorted alphabetically\");\n                    return memo;\n                } else {\n                    return decl;\n                }\n            }, node.declarations[0]);\n        }\n    };\n};\n\nmodule.exports.schema = [\n    {\n        \"type\": \"object\",\n        \"properties\": {\n            \"ignoreCase\": {\n                \"type\": \"boolean\"\n            }\n        },\n        \"additionalProperties\": false\n    }\n];\n"]}