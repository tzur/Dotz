{"version":3,"sources":["no-magic-numbers.js"],"names":[],"mappings":"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","file":"no-magic-numbers-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag statements that use magic numbers (adapted from https://github.com/danielstjules/buddy.js)\n * @author Vincent Lemeunier\n * @copyright 2015 Vincent Lemeunier. All rights reserved.\n *\n * This rule was adapted from danielstjules/buddy.js\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Daniel St. Jules\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * See LICENSE file in root directory for full license.\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n    var config = context.options[0] || {},\n        ignore = config.ignore || [0, 1, 2],\n        detectObjects = !!config.detectObjects,\n        enforceConst = !!config.enforceConst;\n\n    /**\n     * Returns whether the node is number literal\n     * @param {Node} node - the node literal being evaluated\n     * @returns {boolean} true if the node is a number literal\n     */\n    function isNumber(node) {\n        return typeof node.value === \"number\";\n    }\n\n    /**\n     * Returns whether the number should be ignored\n     * @param {number} num - the number\n     * @returns {boolean} true if the number should be ignored\n     */\n    function shouldIgnoreNumber(num) {\n        return ignore.indexOf(num) !== -1;\n    }\n\n\n    return {\n        \"Literal\": function(node) {\n            var parent = node.parent,\n                value = node.value,\n                raw = node.raw,\n                okTypes = detectObjects ? [] : [\"ObjectExpression\", \"Property\", \"AssignmentExpression\"];\n\n            if (!isNumber(node)) {\n                return;\n            }\n\n            if (parent.type === \"UnaryExpression\" && parent.operator === \"-\") {\n                node = parent;\n                parent = node.parent;\n                value = -value;\n                raw = \"-\" + raw;\n            }\n\n            if (shouldIgnoreNumber(value)) {\n                return;\n            }\n\n            // don't warn on parseInt() or Number.parseInt() radix\n            if (parent.type === \"CallExpression\" && node === parent.arguments[1] &&\n                    (parent.callee.name === \"parseInt\" ||\n                    parent.callee.type === \"MemberExpression\" &&\n                    parent.callee.object.name === \"Number\" &&\n                    parent.callee.property.name === \"parseInt\")\n            ) {\n                return;\n            }\n\n            if (parent.type === \"VariableDeclarator\") {\n                if (enforceConst && parent.parent.kind !== \"const\") {\n                    context.report({\n                        node: node,\n                        message: \"Number constants declarations must use 'const'\"\n                    });\n                }\n            } else if (okTypes.indexOf(parent.type) === -1) {\n                context.report({\n                    node: node,\n                    message: \"No magic number: \" + raw\n                });\n            }\n        }\n    };\n};\n\nmodule.exports.schema = [{\n    \"type\": \"object\",\n    \"properties\": {\n        \"detectObjects\": {\n            \"type\": \"boolean\"\n        },\n        \"enforceConst\": {\n            \"type\": \"boolean\"\n        },\n        \"ignore\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"number\"\n            },\n            \"uniqueItems\": true\n        }\n    },\n    \"additionalProperties\": false\n}];\n"]}