{"version":3,"sources":["no-dupe-args.js"],"names":[],"mappings":";;;;;;;;AAQA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;;;;;;;;;;AAW/B,aAAS,WAAW,CAAC,GAAG,EAAE;AACtB,eAAO,GAAG,CAAC,IAAI,KAAK,WAAW,CAAC;KACnC;;;;;;;;AAQD,aAAS,WAAW,CAAC,IAAI,EAAE;AACvB,YAAI,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;AACnD,YAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAEjC,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;AACvC,gBAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;;;AAG5B,gBAAI,GAAG,GAAG,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;AAC9B,gBAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,CAAC,EAAE;AAC/C,yBAAS;aACZ;AACD,kBAAM,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;;;AAGnB,gBAAI,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;AAC7C,gBAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;AAClB,uBAAO,CAAC,MAAM,CAAC;AACX,wBAAI,EAAE,IAAI;AACV,2BAAO,EAAE,6BAA6B;AACtC,wBAAI,EAAE,EAAC,IAAI,EAAE,QAAQ,CAAC,IAAI,EAAC;iBAC9B,CAAC,CAAC;aACN;SACJ;KACJ;;;;;;AAMD,WAAO;AACH,6BAAqB,EAAE,WAAW;AAClC,4BAAoB,EAAE,WAAW;KACpC,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-dupe-args-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag duplicate arguments\n * @author Jamund Ferguson\n * @copyright 2015 Jamund Ferguson. All rights reserved.\n * @copyright 2015 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    //--------------------------------------------------------------------------\n    // Helpers\n    //--------------------------------------------------------------------------\n\n    /**\n     * Checks whether or not a given definition is a parameter's.\n     * @param {escope.DefEntry} def - A definition to check.\n     * @returns {boolean} `true` if the definition is a parameter's.\n     */\n    function isParameter(def) {\n        return def.type === \"Parameter\";\n    }\n\n    /**\n     * Determines if a given node has duplicate parameters.\n     * @param {ASTNode} node The node to check.\n     * @returns {void}\n     * @private\n     */\n    function checkParams(node) {\n        var variables = context.getDeclaredVariables(node);\n        var keyMap = Object.create(null);\n\n        for (var i = 0; i < variables.length; ++i) {\n            var variable = variables[i];\n\n            // TODO(nagashima): Remove this duplication check after https://github.com/estools/escope/pull/79\n            var key = \"$\" + variable.name; // to avoid __proto__.\n            if (!isParameter(variable.defs[0]) || keyMap[key]) {\n                continue;\n            }\n            keyMap[key] = true;\n\n            // Checks and reports duplications.\n            var defs = variable.defs.filter(isParameter);\n            if (defs.length >= 2) {\n                context.report({\n                    node: node,\n                    message: \"Duplicate param '{{name}}'.\",\n                    data: {name: variable.name}\n                });\n            }\n        }\n    }\n\n    //--------------------------------------------------------------------------\n    // Public API\n    //--------------------------------------------------------------------------\n\n    return {\n        \"FunctionDeclaration\": checkParams,\n        \"FunctionExpression\": checkParams\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}