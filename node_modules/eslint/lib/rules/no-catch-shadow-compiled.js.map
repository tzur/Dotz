{"version":3,"sources":["no-catch-shadow.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;;;;;;;;;;;AAY/B,aAAS,gBAAgB;;;kCAAc;gBAAb,KAAK;gBAAE,IAAI;;;AACjC,gBAAI,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,UAAS,QAAQ,EAAE;AAChD,uBAAO,QAAQ,CAAC,IAAI,KAAK,IAAI,CAAC;aACjC,CAAC,CAAC;;AAEH,gBAAI,KAAK,EAAE;AACP,uBAAO,IAAI,CAAC;aACf;;AAED,gBAAI,KAAK,CAAC,KAAK,EAAE;qBACW,KAAK,CAAC,KAAK;sBAAE,IAAI;;AATzC,qBAAK;;aAUR;;AAED,mBAAO,KAAK,CAAC;SAChB;KAAA;;;;;;AAMD,WAAO;;AAEH,qBAAa,EAAE,qBAAS,IAAI,EAAE;AAC1B,gBAAI,KAAK,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;;;;AAI/B,gBAAI,KAAK,CAAC,KAAK,KAAK,IAAI,EAAE;AACtB,qBAAK,GAAG,KAAK,CAAC,KAAK,CAAC;aACvB;;AAED,gBAAI,gBAAgB,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AAC1C,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,6DAA6D,EAC1E,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;aACtC;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-catch-shadow-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag variable leak in CatchClauses in IE 8 and earlier\n * @author Ian Christian Myers\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    //--------------------------------------------------------------------------\n    // Helpers\n    //--------------------------------------------------------------------------\n\n    /**\n     * Check if the parameters are been shadowed\n     * @param {object} scope current scope\n     * @param {string} name parameter name\n     * @returns {boolean} True is its been shadowed\n     */\n    function paramIsShadowing(scope, name) {\n        var found = scope.variables.some(function(variable) {\n            return variable.name === name;\n        });\n\n        if (found) {\n            return true;\n        }\n\n        if (scope.upper) {\n            return paramIsShadowing(scope.upper, name);\n        }\n\n        return false;\n    }\n\n    //--------------------------------------------------------------------------\n    // Public API\n    //--------------------------------------------------------------------------\n\n    return {\n\n        \"CatchClause\": function(node) {\n            var scope = context.getScope();\n\n            // When blockBindings is enabled, CatchClause creates its own scope\n            // so start from one upper scope to exclude the current node\n            if (scope.block === node) {\n                scope = scope.upper;\n            }\n\n            if (paramIsShadowing(scope, node.param.name)) {\n                context.report(node, \"Value of '{{name}}' may be overwritten in IE 8 and earlier.\",\n                        { name: node.param.name });\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}