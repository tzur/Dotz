{"version":3,"sources":["no-floating-decimal.js"],"names":[],"mappings":";;;;;AAKA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;AACH,iBAAS,EAAE,iBAAS,IAAI,EAAE;;AAEtB,gBAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,EAAE;AAChC,oBAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;AAC7B,2BAAO,CAAC,MAAM,CAAC,IAAI,EAAE,qDAAqD,CAAC,CAAC;iBAC/E;AACD,oBAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/C,2BAAO,CAAC,MAAM,CAAC,IAAI,EAAE,sDAAsD,CAAC,CAAC;iBAChF;aACJ;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-floating-decimal-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag use of a leading/trailing decimal point in a numeric literal\n * @author James Allardice\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n        \"Literal\": function(node) {\n\n            if (typeof node.value === \"number\") {\n                if (node.raw.indexOf(\".\") === 0) {\n                    context.report(node, \"A leading decimal point can be confused with a dot.\");\n                }\n                if (node.raw.indexOf(\".\") === node.raw.length - 1) {\n                    context.report(node, \"A trailing decimal point can be confused with a dot.\");\n                }\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}