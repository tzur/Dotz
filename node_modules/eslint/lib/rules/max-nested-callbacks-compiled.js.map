{"version":3,"sources":["max-nested-callbacks.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;;;;;AAM/B,QAAI,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;;;;;AAMnC,QAAI,aAAa,GAAG,EAAE,CAAC;;;;;;;;AAQvB,aAAS,aAAa,CAAC,IAAI,EAAE;AACzB,YAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;;AAEzB,YAAI,MAAM,CAAC,IAAI,KAAK,gBAAgB,EAAE;AAClC,yBAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5B;;AAED,YAAI,aAAa,CAAC,MAAM,GAAG,SAAS,EAAE;AAClC,gBAAI,IAAI,GAAG,EAAC,GAAG,EAAE,aAAa,CAAC,MAAM,EAAE,GAAG,EAAE,SAAS,EAAC,CAAC;AACvD,mBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,kEAAkE,EAAE,IAAI,CAAC,CAAC;SAClG;KACJ;;;;;;;AAOD,aAAS,QAAQ,GAAG;AAChB,qBAAa,CAAC,GAAG,EAAE,CAAC;KACvB;;;;;;AAMD,WAAO;AACH,iCAAyB,EAAE,aAAa;AACxC,sCAA8B,EAAE,QAAQ;;AAExC,4BAAoB,EAAE,aAAa;AACnC,iCAAyB,EAAE,QAAQ;KACtC,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CACpB;AACI,UAAM,EAAE,SAAS;CACpB,CACJ,CAAC","file":"max-nested-callbacks-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to enforce a maximum number of nested callbacks.\n * @author Ian Christian Myers\n * @copyright 2013 Ian Christian Myers. All rights reserved.\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    //--------------------------------------------------------------------------\n    // Constants\n    //--------------------------------------------------------------------------\n\n    var THRESHOLD = context.options[0];\n\n    //--------------------------------------------------------------------------\n    // Helpers\n    //--------------------------------------------------------------------------\n\n    var callbackStack = [];\n\n    /**\n     * Checks a given function node for too many callbacks.\n     * @param {ASTNode} node The node to check.\n     * @returns {void}\n     * @private\n     */\n    function checkFunction(node) {\n        var parent = node.parent;\n\n        if (parent.type === \"CallExpression\") {\n            callbackStack.push(node);\n        }\n\n        if (callbackStack.length > THRESHOLD) {\n            var opts = {num: callbackStack.length, max: THRESHOLD};\n            context.report(node, \"Too many nested callbacks ({{num}}). Maximum allowed is {{max}}.\", opts);\n        }\n    }\n\n    /**\n     * Pops the call stack.\n     * @returns {void}\n     * @private\n     */\n    function popStack() {\n        callbackStack.pop();\n    }\n\n    //--------------------------------------------------------------------------\n    // Public API\n    //--------------------------------------------------------------------------\n\n    return {\n        \"ArrowFunctionExpression\": checkFunction,\n        \"ArrowFunctionExpression:exit\": popStack,\n\n        \"FunctionExpression\": checkFunction,\n        \"FunctionExpression:exit\": popStack\n    };\n\n};\n\nmodule.exports.schema = [\n    {\n        \"type\": \"integer\"\n    }\n];\n"]}