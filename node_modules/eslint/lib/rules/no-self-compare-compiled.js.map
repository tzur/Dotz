{"version":3,"sources":["no-self-compare.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;;;AAMb,MAAM,CAAC,OAAO,GAAG,UAAS,OAAO,EAAE;;AAE/B,WAAO;;AAEH,0BAAkB,EAAE,0BAAS,IAAI,EAAE;AAC/B,gBAAI,SAAS,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;AACjE,gBAAI,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KACpC,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,IAC1G,IAAI,CAAC,IAAI,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA,AAAC,EAAE;AACxG,uBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,+CAA+C,CAAC,CAAC;aACzE;SACJ;KACJ,CAAC;CAEL,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,EAAE,CAAC","file":"no-self-compare-compiled.js","sourcesContent":["/**\n * @fileoverview Rule to flag comparison where left part is the same as the right\n * part.\n * @author Ilya Volodin\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Rule Definition\n//------------------------------------------------------------------------------\n\nmodule.exports = function(context) {\n\n    return {\n\n        \"BinaryExpression\": function(node) {\n            var operators = [\"===\", \"==\", \"!==\", \"!=\", \">\", \"<\", \">=\", \"<=\"];\n            if (operators.indexOf(node.operator) > -1 &&\n                (node.left.type === \"Identifier\" && node.right.type === \"Identifier\" && node.left.name === node.right.name ||\n                node.left.type === \"Literal\" && node.right.type === \"Literal\" && node.left.value === node.right.value)) {\n                context.report(node, \"Comparing to itself is potentially pointless.\");\n            }\n        }\n    };\n\n};\n\nmodule.exports.schema = [];\n"]}