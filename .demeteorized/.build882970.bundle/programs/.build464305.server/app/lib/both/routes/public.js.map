{"version":3,"sources":["meteor://ðŸ’»app/lib/both/routes/public.js"],"names":[],"mappings":"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","file":"/lib/both/routes/public.js","sourcesContent":["const publicRedirect = () => {\n  if ( Meteor.userId() ) {\n    let userSlug = Meteor.user().profile.userSlug;\n    FlowRouter.go( '/' + userSlug );\n  }\n};\n\nconst publicRoutes = FlowRouter.group({\n  name: 'public'\n});\n\npublicRoutes.route( '/', {\n  name: 'landing',\n  action() {\n    if ( Meteor.user() ) {\n      let userSlug = Meteor.user().profile.userSlug;\n      FlowRouter.go( '/' + userSlug );\n    } else {\n      //BlazeLayout.render( 'landingSignup' );\n      //Session.set('joinUsDivOn', true);\n      //Session.set('iAmAHotel', true);\n      //Session.set('iAmFromTheHomePage', true);\n      //console.log(\"joinUsDivOn is \" + Session.get('joinUsDivOn') );\n      //console.log(\"iAmFromTheHomePage is \" + Session.get('iAmFromTheHomePage') );\n      FlowRouter.go('/dotz');\n    }\n  }\n});\n\npublicRoutes.route( '/signup', {\n  name: 'signup',\n  action() {\n    if ( Meteor.user() ) {\n      let userSlug = Meteor.user().profile.userSlug;\n      FlowRouter.go( '/' + userSlug );\n    } else {\n      BlazeLayout.render( 'landingSignup' );\n    }\n  }\n});\n\npublicRoutes.route( '/login', {\n  name: 'login',\n  action() {\n    if ( Meteor.user() ) {\n      let userSlug = Meteor.user().profile.userSlug;\n      FlowRouter.go( '/' + userSlug );\n    } else {\n      //BlazeLayout.render( 'default', { yield: 'landing-signup' } );\n      BlazeLayout.render( 'landingLogin' );\n    }\n\n  }\n});\n\npublicRoutes.route( '/recover-password', {\n  name: 'recover-password',\n  action() {\n    BlazeLayout.render( 'default', { yield: 'recoverPassword' } );\n  }\n});\npublicRoutes.route( '/reset-password/:token', {\n  name: 'reset-password',\n  action() {\n    BlazeLayout.render( 'default', { yield: 'resetPassword' } );\n  }\n});\n\npublicRoutes.route( '/main/search', {\n  name: 'search',\n  action() {\n    BlazeLayout.render( 'default', { yield: 'searchBox' } );\n  }\n});\n\n//Special Routing:\n\n//Special routing for TLVglobal email list:\npublicRoutes.route( '/telavivglobal/dec', {\n  name: 'dec',\n  action() {\n    Session.set('joinUsDivOn', true);\n    Session.set('iAmAHotel', true);\n    //console.log(\"joinUsDivOn is \" + Session.get('joinUsDivOn') );\n    //console.log(\"iAmAHotel is \" + Session.get('iAmAHotel') );\n    FlowRouter.go('/telavivglobal');\n  }\n});\n\n//Special routing for Hotels link:\npublicRoutes.route( '/hotels', {\n  name: 'hotels',\n  action() {\n    Session.set('joinUsDivOn', true);\n    Session.set('iAmAHotel', true);\n    FlowRouter.go('/signup');\n  }\n});\n\n\n//user & dot Show:\n\n\n//TBD: we need to move the user page to the global-route area (coming soon):\npublicRoutes.route( '/:userSlug', {\n  name: 'user-show',\n  action() {\n    BlazeLayout.render( 'default', { yield: 'userShow' } );\n  }\n});\n\n//TBD: we need to move the dotShow page to the global-route area (coming soon):\n///:userSlug/:dotType/:dotSlug\npublicRoutes.route( '/:userSlug/:dotType/:dotSlug', {\n  name: 'dot-show',\n  action() {\n    BlazeLayout.render( 'default', { yield: 'dotShow' } );\n  }\n});\n\n\n"]}