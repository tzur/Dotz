{"version":3,"sources":["meteor://ðŸ’»app/lib/both/modules/smartRefFunctions.js"],"names":[],"mappings":"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","file":"/lib/both/modules/smartRefFunctions.js","sourcesContent":["//changing SmartRef to be independent object.\n let _smartRef = function (dotId, dotOwnerUserId,parentDotId, actionName, connectedByUserId ,personalDescription ){\n      this.dot = {\n        _id: dotId,\n        ownerUserId: dotOwnerUserId\n      };\n      this.connection = {\n        toParentDotId: parentDotId,\n        connectedByUserId: connectedByUserId,\n        actionName: actionName,\n        personalDescription: personalDescription,\n        likes: []\n      };\n};\n\nlet _likeDot = function(smartRef, userId){\n  check(smartRef, Schema.dotSmartRef);\n  check(userId, Meteor.userId());\n  if (userId === undefined || userId === null){\n    return false;\n  }\n  Meteor.call('likeDot', smartRef.connection.toParentDotId, smartRef.dot._id, userId, function(error, result){\n    if (error){\n      console.log(\"Error \"+ error);\n    }\n    else{\n      Meteor.call('updateTotalUpvotes', smartRef.dot._id, smartRef.connection.toParentDotId, function(error, result){\n        if(error){\n          console.log(\"Error in 'updateTotalUpvotes': \" + error)\n        }\n      });\n      let parentDot = Dotz.findOne(smartRef.connection.toParentDotId);\n      if(parentDot.isOpen){\n        //If we have more than one variable at the array\n        if (parentDot.connectedDotzArray.length > 1){\n          let currentIndex =0;\n          //Find the current smartRef index.\n          while (parentDot.connectedDotzArray[currentIndex].dot._id != smartRef.dot._id){\n              currentIndex++;\n          }\n          //if he is not at the top..(we are at like action so we have nothing to do...)\n          if (currentIndex != 0) {\n            let tempIndex = currentIndex; // temporary index just for the current iteration\n            let newIndex = currentIndex; //will save our new index\n            while (tempIndex != 0) {\n              tempIndex -= 1;\n              //check if the dot that is located from left of me have less likes than me.\n              if (parentDot.connectedDotzArray[tempIndex].connection.likes.length <\n                parentDot.connectedDotzArray[currentIndex].connection.likes.length) {\n                newIndex = tempIndex; // i need to replace her, so save her index\n              }\n              else{\n                break; // if one is bigger than me than sure all of the rest are, no need to keep iterating.\n              }\n            }\n            // if the newIndex was changed, lets update the array with it's new order.\n            if (newIndex != currentIndex){\n              Meteor.call('sortByLikes',parentDot.connectedDotzArray[currentIndex],\n                smartRef.connection.toParentDotId ,newIndex, function(error,result){\n                  if (error){\n                    console.log(\"ERROR \" + error);\n                  }\n                })\n            }\n          }\n        }\n      }\n    }\n  });\n};\n\nlet _smartRefToDataObject = function(smartRefArray){\n  let data;\n  let dataArray = [];\n  smartRefArray.forEach(function(smartRef) {\n    data = {};\n    let dot = Dotz.findOne(smartRef.dot._id);\n    if (dot){\n      let ownerUser = Meteor.users.findOne(dot.ownerUserId);\n      let connectedUser = Meteor.users.findOne(smartRef.connection.connectedByUserId);\n\n      //1:\n      data.smartRef = smartRef;\n      //2:\n      data.dot = dot;\n      //3:\n      if (ownerUser) {\n        data.ownerUser = {\n          id: ownerUser._id,\n          username: ownerUser.username,\n          userSlug: ownerUser.profile.userSlug,\n          profileImage: ownerUser.profile.profileImage\n        };\n      }\n      //4:\n      if (connectedUser) {\n        data.connectedByUser = {\n          id: connectedUser._id,\n          username: connectedUser.username,\n          userSlug: ownerUser.profile.userSlug,\n          profileImage: connectedUser.profile.profileImage\n        };\n      }\n\n      if (data && data.ownerUser && data.connectedByUser) {\n        dataArray.push(data);\n      }\n    }\n  });\n\n  return dataArray;\n\n};\n\nModules.both.Dotz.smartRef = _smartRef;\nModules.both.Dotz.likeDot = _likeDot;\nModules.both.Dotz.smartRefToDataObject = _smartRefToDataObject;\n\n\n\n\n"]}