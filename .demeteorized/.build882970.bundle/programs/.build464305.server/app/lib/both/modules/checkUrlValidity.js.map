{"version":3,"sources":["meteor://ðŸ’»app/lib/both/modules/checkUrlValidity.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,qBAAqB,GAAG,UAAE,GAAG,EAAM;AACrC,SAAO,KAAK,CAAC,OAAO,CAAE,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,CAAE,CAAC;CAC7F,CAAC;;AAEF,IAAI,eAAe,GAAG,UAAE,GAAG,EAAM;AAC/B,SAAS,GAAG,CAAC,OAAO,CAAE,kBAAkB,CAAE,GAAG,CAAC,CAAG;CAClD,CAAC;;AAEF,IAAI,YAAY,GAAG,UAAE,GAAG,EAAM;AAC5B,MAAK,qBAAqB,CAAE,GAAG,CAAE,EAAG;AAClC,WAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kCAAkC,EAAE,CAAC;GACpE;;AAED,MAAK,eAAe,CAAE,GAAG,CAAE,EAAG;AAC5B,WAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,gCAAgC,EAAE,CAAC;GAClE;;AAED,SAAO,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;CACxB,CAAC;;AAEF,IAAI,QAAQ,GAAG,UAAE,GAAG,EAAM;AACxB,MAAI,IAAI,GAAG,YAAY,CAAE,GAAG,CAAE,CAAC;;AAE/B,MAAK,CAAC,IAAI,CAAC,KAAK,EAAG;AACjB,UAAM,IAAI,MAAM,CAAC,KAAK,CAAE,YAAY,EAAE,IAAI,CAAC,KAAK,CAAE,CAAC;GACpD;CACF,CAAC;;AAEF,OAAO,CAAC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,mC","file":"/lib/both/modules/checkUrlValidity.js","sourcesContent":["let _fileExistsInDatabase = ( url ) => {\n  return Files.findOne( { \"url\": url, \"userId\": Meteor.userId() }, { fields: { \"_id\": 1 } } );\n};\n\nlet _isNotAmazonUrl = ( url ) => {\n  return ( url.indexOf( 's3.amazonaws.com' ) < 0 );\n};\n\nlet _validateUrl = ( url ) => {\n  if ( _fileExistsInDatabase( url ) ) {\n    return { valid: false, error: \"Sorry, this file already exists!\" };\n  }\n\n  if ( _isNotAmazonUrl( url ) ) {\n    return { valid: false, error: \"Sorry, this isn't a valid URL!\" };\n  }\n\n  return { valid: true };\n};\n\nlet validate = ( url ) => {\n  let test = _validateUrl( url );\n\n  if ( !test.valid ) {\n    throw new Meteor.Error( \"file-error\", test.error );\n  }\n};\n\nModules.both.checkUrlValidity = validate;\n"]}