{"version":3,"sources":["meteor://ðŸ’»app/server/modules/generate-accounts.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,cAAc,GAAG,CACnB;AACE,MAAI,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,SAAS,EAAE;AACzC,OAAK,EAAE,iBAAiB;AACxB,UAAQ,EAAE,UAAU;CACrB,CACF,CAAC;;AAEF,IAAI,gBAAgB,GAAG,YAAM;AAC3B,MAAI,aAAa,GAAG,CAAC;MACjB,UAAU,GAAM,qBAAqB,CAAE,cAAc,CAAC,MAAM,GAAG,aAAa,CAAE,CAAC;;AAEnF,MAAK,CAAC,UAAU,EAAG;AACjB,gBAAY,CAAE,cAAc,CAAE,CAAC;AAC/B,gBAAY,CAAE,kBAAkB,CAAE,aAAa,CAAE,CAAE,CAAC;GACrD;CACF,CAAC;;AAEF,IAAI,qBAAqB,GAAG,UAAE,KAAK,EAAM;AACvC,MAAI,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,EAAE,CAAC;AAC5C,SAAO,SAAS,GAAG,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC;CACzC,CAAC;;AAEF,IAAI,YAAY,GAAG,UAAE,KAAK,EAAM;AAC9B,OAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAG;AACvC,QAAI,IAAI,GAAS,KAAK,CAAE,CAAC,CAAE;QACvB,UAAU,GAAG,kBAAkB,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;;AAElD,QAAK,CAAC,UAAU,EAAG;AACjB,iBAAW,CAAE,IAAI,CAAE,CAAC;KACrB;GACF;CACF,CAAC;;AAEF,IAAI,kBAAkB,GAAG,UAAE,KAAK,EAAM;AACpC,SAAO,MAAM,CAAC,KAAK,CAAC,OAAO,CAAE,EAAE,gBAAgB,EAAE,KAAK,EAAE,CAAE,CAAC;CAC5D,CAAC;;AAEF,IAAI,WAAW,GAAG,UAAE,IAAI,EAAM;AAC5B,UAAQ,CAAC,UAAU,CAAC;AAClB,SAAK,EAAE,IAAI,CAAC,KAAK;AACjB,YAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,WAAO,EAAE;AACP,UAAI,EAAE,IAAI,CAAC,IAAI;KAChB;GACF,CAAC,CAAC;CACJ,CAAC;;AAEF,IAAI,kBAAkB,GAAG,UAAE,KAAK,EAAM;AACpC,MAAI,KAAK,GAAG,EAAE,CAAC;;AAEf,OAAM,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAG;AAChC,SAAK,CAAC,IAAI,CAAC;AACT,UAAI,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE;AACpE,WAAK,EAAE,KAAK,CAAC,QAAQ,CAAC,KAAK,EAAE;AAC7B,cAAQ,EAAE,UAAU;KACrB,CAAC,CAAC;GACJ;;AAED,SAAO,KAAK,CAAC;CACd,CAAC;;AAEF,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,gBAAgB,CAAC,yB","file":"/server/modules/generate-accounts.js","sourcesContent":["let administrators = [\n  {\n    name: { first: 'Admin', last: 'McAdmin' },\n    email: 'admin@admin.com',\n    password: 'password'\n  }\n];\n\nlet generateAccounts = () => {\n  let fakeUserCount = 5,\n      usersExist    = _checkIfAccountsExist( administrators.length + fakeUserCount );\n\n  if ( !usersExist ) {\n    _createUsers( administrators );\n    _createUsers( _generateFakeUsers( fakeUserCount ) );\n  }\n};\n\nlet _checkIfAccountsExist = ( count ) => {\n  let userCount = Meteor.users.find().count();\n  return userCount < count ? false : true;\n};\n\nlet _createUsers = ( users ) => {\n  for ( let i = 0; i < users.length; i++ ) {\n    let user       = users[ i ],\n        userExists = _checkIfUserExists( user.email );\n\n    if ( !userExists ) {\n      _createUser( user );\n    }\n  }\n};\n\nlet _checkIfUserExists = ( email ) => {\n  return Meteor.users.findOne( { 'emails.address': email } );\n};\n\nlet _createUser = ( user ) => {\n  Accounts.createUser({\n    email: user.email,\n    password: user.password,\n    profile: {\n      name: user.name\n    }\n  });\n};\n\nlet _generateFakeUsers = ( count ) => {\n  let users = [];\n\n  for ( let i = 0; i < count; i++ ) {\n    users.push({\n      name: { first: faker.name.firstName(), last: faker.name.lastName() },\n      email: faker.internet.email(),\n      password: 'password'\n    });\n  }\n\n  return users;\n};\n\nModules.server.generateAccounts = generateAccounts;\n"]}