{"version":3,"sources":["meteor://ğŸ’»app/server/email/validation.coffee"],"names":[],"mappings":";;;;;;;;;AAAA;;AAAA,SAAS,GAAG,CAAC,OAAJ,CAAY,eAAZ,CAAT;;AAAA,MAEM,CAAC,OAAP,CACE;AAAA,wBAAsB,SAAC,OAAD;AACpB;AAAA,UAAM,OAAN,EAAc,MAAd;AAAA,IAEA,gBAAoB,YAFpB;AAAA,IAIA,IAAI,CAAC,IAAL,CAAU,KAAV,EAAiB,kCAAjB,EACE;AAAA,cACE;AAAA,eAAO,OAAP;AAAA,QACA,QAAQ,qCADR;OADF;KADF,EAIC,SAAC,KAAD,EAAO,QAAP;AACC,UAAG,KAAH;eACE,aAAa,CAAC,QAAD,CAAb,CAAqB,KAArB,EADF;OAAA;AAGE,YAAG,QAAQ,CAAC,IAAI,CAAC,MAAd,KAAwB,SAAxB,IAAqC,QAAQ,CAAC,IAAI,CAAC,MAAd,KAAwB,SAAhE;iBACE,aAAa,CAAC,QAAD,CAAb,CACE;AAAA,mBAAO,wEAAP;WADF,EADF;SAAA;iBAKE,aAAa,CAAC,QAAD,CAAb,CAAqB,IAArB,EALF;SAHF;OADD;IAAA,CAJD,CAJA;WAoBA,aAAa,CAAC,IAAd,GArBoB;EAAA,CAAtB;CADF,CAFA","file":"/server/email/validation.coffee.js","sourcesContent":["Future = Npm.require('fibers/future');\n\nMeteor.methods(\n  validateEmailAddress: (address)->\n    check(address,String)\n\n    validateEmail = new Future()\n\n    HTTP.call(\"GET\", \"https://api.kickbox.io/v1/verify\",\n      params:\n        email: address\n        apikey: \"Enter your Kickbox.io API key here.\"\n    ,(error,response)->\n      if error\n        validateEmail.return(error)\n      else\n        if response.data.result == \"invalid\" or response.data.result == \"unknown\"\n          validateEmail.return(\n            error: \"Sorry, your email was returned as invalid. Please try another address.\"\n          )\n        else\n          validateEmail.return(true)\n    )\n\n    validateEmail.wait()\n)\n"]}