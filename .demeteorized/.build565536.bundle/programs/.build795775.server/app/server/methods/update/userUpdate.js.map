{"version":3,"sources":["meteor://ðŸ’»app/server/methods/update/userUpdate.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,WAAW,GAAG,UAAC,MAAM,EAAE,aAAa,EAAK;AAC3C,MAAI;AACF,SAAK,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;AAC7B,SAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtB,WAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AACpB,UAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAC,GAAG,EAAE,MAAM,EAAC,EAAE,aAAa,CAAC,CAAC;GACnD,CAAC,OAAO,QAAQ,EAAE;AACjB,WAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACtB,WAAO,QAAQ,CAAC;GACjB;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,CAAC;AACb,4BAA0B,YAAC,QAAQ,EAAE,MAAM,EAAC;AAC1C,SAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AACxB,SAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtB,QAAI,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACxC,QAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;AACzB,UAAI,aAAa,GAAG,CAAC,CAAC;AACtB,UAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,oCAAoC,EAAE;AACvE,qBAAa,GAAG,CAAC,CAAC;OACnB,MACI;AACH,qBAAa,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,oCAAoC,CAAC;OACrF;AACD,WAAK,IAAI,CAAC,GAAG,aAAa,EAAE,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACjE,YAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE;AACzD,cAAI,aAAa,GAAG;AAClB,iBAAK,EAAE,EAAC,kBAAkB,EAAE,EAAC,SAAS,EAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAC,EAAC;WAC3D,CAAC;AACF,qBAAW,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;SACpC;OACF;KACF;GACF;AACD,YAAU,YAAC,QAAQ,EAAE,MAAM,EAAC;AAC1B,SAAK,CAAC,QAAQ,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;AACpC,SAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;AACtB,UAAM,CAAC,IAAI,CAAC,4BAA4B,EAAC,QAAQ,EAAE,MAAM,EAAE,UAAS,KAAK,EAAE,MAAM,EAAC;AAChF,UAAI,CAAC,KAAK,EAAC;AACT,YAAI,aAAa,GAAG;AAClB,mBAAS,EAAE,EAAC,kBAAkB,EAAE,QAAQ,EAAC;SAC1C,CAAC;AACF,mBAAW,CAAC,MAAM,EAAE,aAAa,CAAC;OACnC,MACG;AACF,eAAO,CAAC,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC,CAAC;OAC9B;KACF,CAAC,CAAC;GACJ;CACF,CAAC,CAAC,sE","file":"/server/methods/update/userUpdate.js","sourcesContent":["let _userUpdate = (userId, updateOptions) => {\n  try {\n    check(updateOptions, Object);\n    check(userId, String);\n    console.log(userId);\n    Meteor.users.update({_id: userId}, updateOptions);\n  } catch (exeption) {\n    console.log(exeption);\n    return exeption;\n  }\n};\n\nMeteor.methods({\n  checkAndRemoveDotzFromFeed(smartRef, userId){\n    check(smartRef, Object);\n    check(userId, String);\n    let user = Meteor.users.findOne(userId);\n    if (user.profile.feedDotz) {\n      let checkInterval = 0;\n      if (user.profile.feedDotz.length < MAXIMUM_NUMBER_OF_FEED_DOTZ_TO_CHECK) {\n        checkInterval = 0;\n      }\n      else {\n        checkInterval = user.profile.feedDotz.length - MAXIMUM_NUMBER_OF_FEED_DOTZ_TO_CHECK;\n      }\n      for (let i = checkInterval; i < user.profile.feedDotz.length; i++) {\n        if (user.profile.feedDotz[i].dot._id === smartRef.dot._id) {\n          let updateOptions = {\n            $pull: {\"profile.feedDotz\": {\"dot._id\": smartRef.dot._id}}\n          };\n          _userUpdate(userId, updateOptions);\n        }\n      }\n    }\n  },\n  updateFeed(smartRef, userId){\n    check(smartRef, Schema.dotSmartRef);\n    check(userId, String);\n    Meteor.call('checkAndRemoveDotzFromFeed',smartRef, userId, function(error, result){\n      if (!error){\n        let updateOptions = {\n          $addToSet: {\"profile.feedDotz\": smartRef}\n        };\n        _userUpdate(userId, updateOptions)\n      }\n      else{\n        console.log(\"ERROR\" + error);\n      }\n    });\n  }\n});\n"]}