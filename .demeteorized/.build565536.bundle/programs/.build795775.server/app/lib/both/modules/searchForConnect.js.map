{"version":3,"sources":["meteor://ðŸ’»app/lib/both/modules/searchForConnect.js"],"names":[],"mappings":";;;;;;;;;AACA,IAAI,mCAAmC,GAAG,UAAS,WAAW,EAAE,8BAA8B,EAAC;AAC7F,MAAI,SAAS,GAAG,EAAE,CAAC;AACnB,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,QAAM,CAAC,cAAc,GAAC,EAAE,CAAC;AACzB,QAAM,CAAC,iBAAiB,GAAE,EAAE,CAAC;AAC7B,MAAI,GAAG,GAAG,EAAE,CAAC;AACb,MAAI,SAAS,GAAG,EAAE,CAAC;AACnB,MAAI,IAAI,aAAC;AACT,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,aAAW,CAAC,OAAO,CAAC,UAAS,SAAS,EAAC;AACrC,OAAG,GAAG,EAAE,CAAC;AACT,QAAI,GAAG,EAAE,CAAC;AACV,QAAI,SAAS,CAAC,OAAO,KAAK,aAAa,IAAI,SAAS,CAAC,YAAY,KAAK,8BAA8B,EAAC;AACnG,aAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;KACjD,MACG;AACF,SAAG,GAAG,SAAS,CAAC;AAChB,SAAG,CAAC,GAAG,GAAG,SAAS,CAAC,YAAY,CAAC;AACjC,UAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACf,UAAI,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;AAC7C,UAAI,IAAI,EAAC;AACP,iBAAS,GAAG;AACV,YAAE,EAAE,IAAI,CAAC,GAAG;AACZ,kBAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,sBAAY,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY;SACxC,CAAC;AACF,YAAI,CAAC,SAAS,GAAG,SAAS,CAAC;AAC3B,YAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,8BAA8B,EAAE,GAAG,CAAC,GAAG,CAAC,EAAC;AAC/E,gBAAM,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;SACjC,MACG;AACF,gBAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;SACpC;OACF;KACF;GACF,CAAC,CAAC;;AAEH,SAAO,MAAM,CAAC;CACf,CAAC;;AAGF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,kCAAkC,GAAG,mCAAmC,C","file":"/lib/both/modules/searchForConnect.js","sourcesContent":["\nlet _searchCursorToDataObjectForConnect = function(searchArray, checkIfDotIsValidByParentDotId){\n  let dataArray = [];\n  let result = {};\n  result.canBeConnected=[];\n  result.canNotBeConnected= [];\n  let dot = {};\n  let ownerUser = {};\n  let user;\n  let data = {};\n  searchArray.forEach(function(dotSearch){\n    dot = {};\n    data = {};\n    if (dotSearch.dotType === '_profileDot' || dotSearch.__originalId === checkIfDotIsValidByParentDotId){\n      console.log(\"skipping profile or the same dot\");\n    }\n    else{\n      dot = dotSearch;\n      dot._id = dotSearch.__originalId;\n      data.dot = dot;\n      user = Meteor.users.findOne(dot.ownerUserId);\n      if (user){\n        ownerUser = {\n          id: user._id,\n          username: user.username,\n          profileImage: user.profile.profileImage\n        };\n        data.ownerUser = ownerUser;\n        if(Modules.client.Dotz.isConnectedToDot(checkIfDotIsValidByParentDotId, dot._id)){\n          result.canBeConnected.push(data)\n        }\n        else{\n          result.canNotBeConnected.push(data)\n        }\n      }\n    }\n  });\n\n  return result;\n};\n\n\nModules.both.Dotz.searchCursorToDataObjectForConnect = _searchCursorToDataObjectForConnect;\n"]}