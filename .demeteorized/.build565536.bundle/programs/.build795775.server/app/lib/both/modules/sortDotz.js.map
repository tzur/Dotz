{"version":3,"sources":["meteor://ðŸ’»app/lib/both/modules/sortDotz.js"],"names":[],"mappings":";;;;;;;;;;AAEA,IAAI,QAAQ,GAAG,UAAC,QAAQ,EAAE,SAAS,EAAK;;;AAGtC,MAAI,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAC9D,MAAI,MAAM,CAAC,MAAM,EAAE,KAAK,SAAS,CAAC,WAAW,IAAI,SAAS,CAAC,MAAM,EAAE;AACjE,WAAO,KAAK,CAAC;GACd;;;AAGD,MAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC;AAC7B,MAAI,SAAS,GAAG,SAAS,CAAC,kBAAkB,CAAC;;AAE7C,MAAI,SAAS,EAAE;AACb,QAAI,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,UAAS,CAAC,EAAE;AAAE,aAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;KAAE,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;;;AAG5E,QAAI,SAAS,KAAK,CAAC,EAAE;AACnB,UAAI,KAAK,KAAK,CAAC,EAAE;AACf,YAAI,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;AACjC,cAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;OACnD;KACF;;;SAGI,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;AACzB,YAAI,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;AACnC,YAAI,KAAK,GAAG,CAAC,KAAK,WAAW,EAAE;AAC7B,cAAI,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;AACjC,gBAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;SACnD;OACF;;;;;;;;;;;;;GAcF;CACJ,CAAC;;AAEF,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,sC","file":"/lib/both/modules/sortDotz.js","sourcesContent":["\n//TBD: add an \"if (!error)\" statements! >> get inspired by disConnect module :)\nlet sortDotz = (smartRef, sortValue) => {\n  //security checks:\n\n  let parentDot = Dotz.findOne(smartRef.connection.toParentDotId);\n    if (Meteor.userId() !== parentDot.ownerUserId || parentDot.isOpen) {\n      return false;\n    }\n\n    //find relevant index:\n    let dotId = smartRef.dot._id;\n    let dotzArray = parentDot.connectedDotzArray;\n\n    if (dotzArray) {\n      let index = dotzArray.map(function(e) { return e.dot._id; }).indexOf(dotId);\n\n      //UpBtn\n      if (sortValue === 1) {\n        if (index !== 0) {\n          let newIndex = index - sortValue;\n          Meteor.call('sortDotzUpdate', smartRef, newIndex);\n        }\n      }\n\n      //DownBtn\n      else if (sortValue === -1) {\n        let arrayLength = dotzArray.length;\n        if (index + 1 !== arrayLength) {\n          let newIndex = index - sortValue;\n          Meteor.call('sortDotzUpdate', smartRef, newIndex);\n        }\n      }\n\n      ////DC up\n      //else if (sortValue === 11) {\n      //  Meteor.call('sortDotzUpdate', smartRef, 0);\n      //\n      //}\n      //\n      ////DC Down\n      //else if (sortValue === -11) {\n      //  let newIndex = (dotzArray.length -1);\n      //  Meteor.call('sortDotzUpdate', smartRef, newIndex);\n      //}\n\n    }\n};\n\nModules.both.Dotz.sortDotz = sortDotz;\n\n"]}